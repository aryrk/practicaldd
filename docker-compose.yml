services:
  mysql:
    build:
      context: .
      dockerfile: Dockerfile/mysql-Dockerfile
    container_name: mysql_practicalDDD
    restart: always
    environment:
      MYSQL_DATABASE: practicalddd
      MYSQL_USER: practicalddd
      MYSQL_PASSWORD: practicalddd
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  axonserver:
    # image: axoniq/axonserver:latest-dev
    build:
      context: .
      dockerfile: Dockerfile/axon-Dockerfile
    container_name: axonserver_PracticalDDD
    restart: always
    ports:
      - "8024:8024" # HTTP dashboard
      - "8124:8124" # gRPC API
      - "8125:8125" # monitoring
    volumes:
      - axon_data:/axonserver/data
      - axon_events:/axonserver/events
      - axon_log:/axonserver/log
      - ./config:/axonserver/config
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8024"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_practicalDDD
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./bookingms/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  routingms:
    build:
      context: .
      dockerfile: Dockerfile/routingms-Dockerfile
    container_name: routingms
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/practicalddd?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: practicalddd
      SPRING_DATASOURCE_PASSWORD: practicalddd
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL57Dialect
      SPRING_JPA_GENERATE_DDL: true

  bookingms:
    build:
      context: .
      dockerfile: Dockerfile/bookingms-Dockerfile
    container_name: bookingms
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      axonserver:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/practicalddd?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: practicalddd
      SPRING_DATASOURCE_PASSWORD: practicalddd
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL57Dialect
      SPRING_JPA_GENERATE_DDL: true

      AXON_AXONSERVER_SERVERS: "axonserver:8124"
      JAVA_TOOL_OPTIONS: "-Daxon.axonserver.suppressDownloadMessage=true"
      ROUTING_SERVICE_URL: http://routingms:8083/cargorouting/optimalRoute
      SPRING_APPLICATION_JSON: '{"routing.service.url":"http://routingms:8083/cargorouting/optimalRoute"}'

  handlingms:
    build:
      context: .
      dockerfile: Dockerfile/handlingms-Dockerfile
    container_name: handlingms
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/practicalddd?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: practicalddd
      SPRING_DATASOURCE_PASSWORD: practicalddd
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL57Dialect
      SPRING_JPA_GENERATE_DDL: true
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

      AXON_AXONSERVER_SERVERS: "axonserver:8124"
      JAVA_TOOL_OPTIONS: "-Daxon.axonserver.suppressDownloadMessage=true"

  trackingms:
    build:
      context: .
      dockerfile: Dockerfile/trackingms-Dockerfile
    container_name: trackingms
    ports:
      - "8084:8084"
    depends_on:
      mysql:
        condition: service_healthy
      axonserver:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/practicalddd?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: practicalddd
      SPRING_DATASOURCE_PASSWORD: practicalddd
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL57Dialect
      JAVA_TOOL_OPTIONS: "--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED"
      SPRING_JPA_GENERATE_DDL: true
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      AXON_AXONSERVER_SERVERS: "axonserver:8124"

volumes:
  mysql_data:
  axon_data:
  axon_events:
  axon_log:
